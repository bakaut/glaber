name: Docker build images with docker
on:
  push:
    branches:
    - 'build/**'
  schedule:
    - cron: '0 3 * * *'
jobs:
  docker:
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare variables
      run: |
        GLABER_TAG=$(git ls-remote --refs --sort='version:refname' --tags \
                    https://gitlab.com/mikler/glaber.git origin '2.*' | \
                    tail --lines=1 | cut --delimiter='/' --fields=3)
        GLABER_VERSION=$(curl -s https://gitlab.com/mikler/glaber/-/raw/${GLABER_TAG}/include/version.h | \
                         grep GLABER_VERSION | tr -dc 0-9.)
        docker pull -q ghcr.io/bakaut/glaber/glaber-server:$GLABER_VERSION && \
        echo "IMAGE=exist" >> $GITHUB_ENV
        echo "GLABER_VERSION=$GLABER_VERSION" >> $GITHUB_ENV
        echo "TMG_TAG=$GLABER_VERSION-temp" >> $GITHUB_ENV
        echo "TAG=$GLABER_VERSION" >> $GITHUB_ENV
        echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
        echo "REGISTRY=ghcr.io" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      if: ${{ env.IMAGE != 'exist' }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build temp glaber-server image
      id: glaber-server
      run: |
        APP_NAME=glaber-server
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        TMP_IMAGE="$BASE_IMAGE:$TMG_TAG"
        cd $APP_NAME
        docker build . -t $TMP_IMAGE --build-arg GLABER_VERSION=$GLABER_VERSION
        docker push $TMP_IMAGE

    - name: Build temp glaber-nginx image
      id: glaber-nginx
      run: |
        APP_NAME=glaber-nginx
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        TMP_IMAGE="$BASE_IMAGE:$TMG_TAG"
        cd $APP_NAME
        docker build . -t $TMP_IMAGE --build-arg GLABER_VERSION=$GLABER_VERSION
        docker push $TMP_IMAGE

    - name: Test glaber start
      run: |
        export GLABER_VERSION=$TMG_TAG
        ./glaber.sh start

    - name: Release glaber-server image
      id: glaber-server-release
      run: |
        APP_NAME=glaber-server
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        cd $APP_NAME
        docker build . -t $BASE_IMAGE:$GLABER_VERSION \
                       -t $BASE_IMAGE:latest \
                       --cache-from $BASE_IMAGE:$TMG_TAG \
                       --build-arg GLABER_VERSION=$GLABER_VERSION
        docker push $BASE_IMAGE:latest
        docker push $BASE_IMAGE:$GLABER_VERSION
        docker rmi -f $BASE_IMAGE:$TMG_TAG

    - name: Release glaber-nginx image
      id: glaber-nginx-release
      run: |
        APP_NAME=glaber-nginx
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        cd $APP_NAME
        docker build . -t $BASE_IMAGE:$GLABER_VERSION \
                       -t $BASE_IMAGE:latest \
                       --cache-from $BASE_IMAGE:$TMG_TAG \
                       --build-arg GLABER_VERSION=$GLABER_VERSION
        docker push $BASE_IMAGE:latest
        docker push $BASE_IMAGE:$GLABER_VERSION
        docker rmi -f $BASE_IMAGE:$TMG_TAG
