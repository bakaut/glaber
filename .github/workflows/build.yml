name: Docker Image CI build docker
on:
  push:
    branches:
    - 'build/**'
jobs:
  prepare:
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare variables
      run: |
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
        GLABER_BUILD_VERSION=$(cat glaber.version)
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
        echo "GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION" >> $GITHUB_ENV
        echo "TMG_TAG=$GLABER_BUILD_VERSION-$SHORT_SHA" >> $GITHUB_ENV
        echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
        echo "REGISTRY=ghcr.io" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Build temp glaber-server image
      id: glaber-server
      run: |
        APP_NAME=glaber-server
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        TMP_IMAGE="$BASE_IMAGE:$TMG_TAG"
        cd $APP_NAME
        docker build . -t $TMP_IMAGE --build-arg GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        docker push $TMP_IMAGE

    - name: Build temp glaber-nginx image
      id: glaber-nginx
      run: |
        APP_NAME=glaber-nginx
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        TMP_IMAGE="$BASE_IMAGE:$TMG_TAG"
        cd $APP_NAME
        docker build . -t $TMP_IMAGE --build-arg GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        docker push $TMP_IMAGE

  test:
    runs-on: ubuntu-22.04
    steps:
    - name: Test glaber start
      run: |
        sudo apt-get update
        sudo apt-get install -y apache2-utils
        export GLABER_BUILD_VERSION=$TMG_TAG
        ./glaber.sh start

  release:
    runs-on: ubuntu-22.04
    steps:
    - name: Release glaber-server image
      id: glaber-server-release
      run: |
        APP_NAME=glaber-server
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        cd $APP_NAME
        docker build . -t $BASE_IMAGE:$GLABER_BUILD_VERSION \
                       -t $BASE_IMAGE:latest \
                       --cache-from $BASE_IMAGE:$TMG_TAG \
                       --build-arg GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        docker push $BASE_IMAGE:latest $BASE_IMAGE:$GLABER_BUILD_VERSION
        docker rmi -f $BASE_IMAGE:$TMG_TAG

    - name: Release glaber-nginx image
      id: glaber-nginx-release
      run: |
        APP_NAME=glaber-nginx
        BASE_IMAGE="$REGISTRY/$GITHUB_REPOSITORY/$APP_NAME"
        cd $APP_NAME
        docker build . -t $BASE_IMAGE:$GLABER_BUILD_VERSION \
                       -t $BASE_IMAGE:latest \
                       --cache-from $BASE_IMAGE:$TMG_TAG \
                       --build-arg GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        docker push $BASE_IMAGE:latest $BASE_IMAGE:$GLABER_BUILD_VERSION
        docker rmi -f $BASE_IMAGE:$TMG_TAG
