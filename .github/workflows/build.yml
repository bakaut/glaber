name: Build, test and release glaber docker images
on:
  push:
    branches:
    - 'build/**'
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push temp glaber-server image
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:glaber-server"
        tags: ghcr.io/bakaut/glaber/glaber-server:${{ github.sha }}
        build-args: GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        push: true
        cache-to: |
          ghcr.io/bakaut/glaber/glaber-server:${{ github.sha }}-cache
      env:
        REGISTRY: docker.pkg.github.com
        PACKAGE: glaber-server
        GLABER_BUILD_VERSION: 2.18.0

    - name: Build and push temp glaber-nginx image
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:glaber-nginx"
        tags: $REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:{GITHUB_SHA::7}
        build-args: GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        push: true
        cache-to: |
          $REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:{GITHUB_SHA::7}-cache
      env:
        REGISTRY: docker.pkg.github.com
        PACKAGE: glaber-nginx
        GLABER_BUILD_VERSION: 2.18.0
  test:
    runs-on: ubuntu-22.04
    steps:
    - name: Testing glaber-server is started
      id: test
      run: |
        export GLABER_BUILD_VERSION=$REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:{GITHUB_SHA::7}
        sudo apt-get update
        sudo apt-get install -y apache2-utils
        ./glaber.sh start

    - name: Run diagnostics
      if: ${{ failure() && steps.test.conclusion == 'failure' }}
      run: ./glaber.sh diag

    - name: Upload diag.zip to artifact
      if: ${{ failure() && steps.test.conclusion == 'failure' }}
      uses: actions/upload-artifact@v3
      with:
        name: diag-{GITHUB_SHA::7}-${{ github.event.repository.updated_at}}.zip
        path: .tmp/diag/diag.zip

    - name: Create an issue
      id: issue
      if: ${{ failure() && steps.test.conclusion == 'failure' }}
      uses: JasonEtco/create-an-issue@v2
      with:
        filename: .github/workflows/test/issue/glaber_start_failed.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-22.04
    steps:
    - name: Build and push glaber-server image release
      id: release-glaber-server
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:glaber-server"
        tags: $REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:$GLABER_BUILD_VERSION,$REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:latest
        build-args: GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        push: true
        cache-from: |
          $REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:{GITHUB_SHA::7}-cache
      env:
        REGISTRY: docker.pkg.github.com
        PACKAGE: glaber-server
        GLABER_BUILD_VERSION: 2.18.0

    - name: Build and push glaber-nginx image release
      id: release-glaber-nginx
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:glaber-nginx"
        tags: $REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:$GLABER_BUILD_VERSION,$REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:latest
        build-args: GLABER_BUILD_VERSION=$GLABER_BUILD_VERSION
        push: true
        cache-from: |
          $REGISTRY/$GITHUB_REPOSITORY/$PACKAGE:{GITHUB_SHA::7}-cache
      env:
        REGISTRY: docker.pkg.github.com
        PACKAGE: glaber-nginx
        GLABER_BUILD_VERSION: 2.18.0

  create-pr:
    runs-on: ubuntu-22.04
    steps:
    - name: Create pull request to master branch
      id: cpr
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.CREATE_PR_PAT }}
        commit-message: Update docker images
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: master
        delete-branch: true
        title: 'Release glaber build images'
        body: |
          Update report
          - Test and release glaber build images
        labels: |
          automated pr
        assignees: ${{ github.actor }}
        reviewers: ${{ github.actor }}
        milestone: 1
        draft: false

  notify:
    runs-on: ubuntu-22.04
    steps:
    - name: Glaber failed to start
      uses: appleboy/telegram-action@master
      if: ${{ failure() && steps.test.conclusion == 'failure' }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            Glaber failed to start

    - name: Created pr to master
      uses: appleboy/telegram-action@master
      if: ${{ steps.cpr.conclusion == 'success' }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            Created pr to master

    - name: Created issue about failed start
      uses: appleboy/telegram-action@master
      if: ${{ steps.issue.conclusion == 'success' }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            Created issue about failed start

  clean:
    runs-on: ubuntu-22.04
    steps:
    - name: Clean temporary docker images
      if: ${{ always() }}
      run: |
        docker login $REGISTRY --username $GITHUB_ACTOR --password ${{ secrets.GITHUB_TOKEN }}
        docker rmi -f $REGISTRY/$GITHUB_REPOSITORY/glaber-server:{GITHUB_SHA::7} \
                      $REGISTRY/$GITHUB_REPOSITORY/glaber-server:{GITHUB_SHA::7}-cache \
                      $REGISTRY/$GITHUB_REPOSITORY/glaber-nginx:{GITHUB_SHA::7} \
                      $REGISTRY/$GITHUB_REPOSITORY/glaber-nginx:{GITHUB_SHA::7}-cache || true
      env:
        REGISTRY: docker.pkg.github.com
